[
  {
    "itemId": "https://andrewlock.net/running-an-aspnetcore-app-behind-iis-in-a-windows-container/",
    "raw": "Running an ASP.NET Core app inside IIS in a Windows container",
    "sanitized": "Running an ASP.NET Core app inside IIS in a Windows container"
  },
  {
    "itemId": "https://andrewlock.net/creating-an-analyzer-to-detect-infinite-loops-caused-by-threadabortexception/",
    "raw": "Creating an analyzer to detect infinite loops caused by ThreadAbortExceptions",
    "sanitized": "Creating an analyzer to detect infinite loops caused by ThreadAbortExceptions"
  },
  {
    "itemId": "https://andrewlock.net/disabling-localized-satellite-assemblies-during-dotnet-publish/",
    "raw": "Disabling localized satellite assemblies during dotnet publish",
    "sanitized": "Disabling localized satellite assemblies during dotnet publish"
  },
  {
    "itemId": "https://andrewlock.net/setting-environment-variables-in-iis-and-avoiding-app-pool-restarts/",
    "raw": "Setting application environment variables in IIS without restarts",
    "sanitized": "Setting application environment variables in IIS without restarts"
  },
  {
    "itemId": "https://andrewlock.net/preventing-client-side-cross-site-scripting-vulnerabilities-with-trusted-types/",
    "raw": "Preventing client-side cross-site-scripting vulnerabilities with Trusted Types",
    "sanitized": "Preventing client-side cross-site-scripting vulnerabilities with Trusted Types"
  },
  {
    "itemId": "https://andrewlock.net/creating-a-source-generator-part-14-supporting-multiple-sdk-versions-in-a-source-generator/",
    "raw": "Supporting multiple .NET SDK versions in a source generator: Creating a source generator - Part 14",
    "sanitized": "Supporting multiple .NET SDK versions in a source generator: Creating a source generator - Part 14"
  },
  {
    "itemId": "https://andrewlock.net/supporting-multiple-sdk-versions-in-analyzers-and-source-generators/",
    "raw": "Supporting multiple .NET SDK versions in analyzers and source generators",
    "sanitized": "Supporting multiple .NET SDK versions in analyzers and source generators"
  },
  {
    "itemId": "https://andrewlock.net/creating-a-source-generator-part-13-providing-and-accessing-msbuild-settings-in-source-generators/",
    "raw": "Accessing MSBuild properties and user configuration from source generators: Creating a source generator - Part 13",
    "sanitized": "Accessing MSBuild properties and user configuration from source generators: Creating a source generator - Part 13"
  },
  {
    "itemId": "https://andrewlock.net/creating-a-source-generator-part-12-reading-compilation-options-and-csharp-version-in-source-generators/",
    "raw": "Reading compilation options and the C# version in source generators: Creating a source generator - Part 12",
    "sanitized": "Reading compilation options and the C# version in source generators: Creating a source generator - Part 12"
  },
  {
    "itemId": "https://andrewlock.net/creating-a-source-generator-part-11-implementing-an-interceptor-with-a-source-generator/",
    "raw": "Implementing an interceptor with a source generator: Creating a source generator - Part 11",
    "sanitized": "Implementing an interceptor with a source generator: Creating a source generator - Part 11"
  },
  {
    "itemId": "https://andrewlock.net/building-latex-projects-on-windows-easily-with-docker/",
    "raw": "Building LaTeX projects on Windows easily with Docker",
    "sanitized": "Building LaTeX projects on Windows easily with Docker"
  },
  {
    "itemId": "https://andrewlock.net/using-the-yamldotnet-source-generator-for-native-aot/",
    "raw": "Using the YamlDotNet source generator for Native AOT",
    "sanitized": "Using the YamlDotNet source generator for Native AOT"
  },
  {
    "itemId": "https://andrewlock.net/understanding-security-headers-part-3-cross-origin-embedder-policy/",
    "raw": "Cross-Origin-Embedder-Policy: securing embedded resources: Understanding cross-origin security headers - Part 3",
    "sanitized": "Cross-Origin-Embedder-Policy: securing embedded resources: Understanding cross-origin security headers - Part 3"
  },
  {
    "itemId": "https://andrewlock.net/understanding-security-headers-part-2-cross-origin-resource-policy-preventing-hotlinking/",
    "raw": "Cross-Origin-Resource-Policy: preventing hotlinking and XSSI attacks: Understanding cross-origin security headers - Part 2",
    "sanitized": "Cross-Origin-Resource-Policy: preventing hotlinking and XSSI attacks: Understanding cross-origin security headers - Part 2"
  },
  {
    "itemId": "https://andrewlock.net/understanding-security-headers-part-1-cross-origin-opener-policy-preventing-attacks-from-popups/",
    "raw": "Cross-Origin-Opener-Policy: preventing attacks from popups: Understanding cross-origin security headers - Part 1",
    "sanitized": "Cross-Origin-Opener-Policy: preventing attacks from popups: Understanding cross-origin security headers - Part 1"
  },
  {
    "itemId": "https://andrewlock.net/recent-updates-for-netescapades-enumgenerators-interceptors/",
    "raw": "Recent updates for NetEscapades.EnumGenerators: interceptors!",
    "sanitized": "Recent updates for NetEscapades.EnumGenerators: interceptors!"
  },
  {
    "itemId": "https://andrewlock.net/working-with-the-result-pattern-part-4-is-the-result-pattern-worth-it/",
    "raw": "Is the result pattern worth it?: Working with the result pattern - Part 4",
    "sanitized": "Is the result pattern worth it?: Working with the result pattern - Part 4"
  },
  {
    "itemId": "https://andrewlock.net/working-with-the-result-pattern-part-3-adding-more-extensions/",
    "raw": "Adding more extensions to Result<T>: Working with the result pattern - Part 3",
    "sanitized": "Adding more extensions to Result: Working with the result pattern - Part 3"
  },
  {
    "itemId": "https://andrewlock.net/working-with-the-result-pattern-part-2-safety-and-simplicity-with-linq/",
    "raw": "Safety and simplicity with LINQ: Working with the result pattern - Part 2",
    "sanitized": "Safety and simplicity with LINQ: Working with the result pattern - Part 2"
  },
  {
    "itemId": "https://andrewlock.net/working-with-the-result-pattern-part-1-replacing-exceptions-as-control-flow/",
    "raw": "Replacing Exceptions-as-flow-control with the result pattern: Working with the result pattern - Part 1",
    "sanitized": "Replacing Exceptions-as-flow-control with the result pattern: Working with the result pattern - Part 1"
  },
  {
    "itemId": "https://andrewlock.net/major-updates-to-netescapades-aspnetcore-security-headers/",
    "raw": "Major updates to NetEscapades.​AspNetCore.​SecurityHeaders",
    "sanitized": "Major updates to NetEscapades.​AspNetCore.​SecurityHeaders"
  },
  {
    "itemId": "https://andrewlock.net/fixing-max_path-issues-in-gitlab/",
    "raw": "Fixing MAX_PATH issues in GitLab",
    "sanitized": "Fixing MAX_PATH issues in GitLab"
  },
  {
    "itemId": "https://andrewlock.net/preventing-breaking-changes-in-public-apis-with-publicapigenerator/",
    "raw": "Preventing breaking changes in public APIs with PublicApiGenerator",
    "sanitized": "Preventing breaking changes in public APIs with PublicApiGenerator"
  },
  {
    "itemId": "https://andrewlock.net/working-with-tar-files-in-dotnet/",
    "raw": "Working with tar files in .NET 8",
    "sanitized": "Working with tar files in .NET 8"
  },
  {
    "itemId": "https://andrewlock.net/using-azure-storage-queues-with-azure-functions-and-queuetrigger/",
    "raw": "Using Azure Storage Queue messages with Azure Functions and [QueueTrigger]",
    "sanitized": "Using Azure Storage Queue messages with Azure Functions and [QueueTrigger]"
  }
]
