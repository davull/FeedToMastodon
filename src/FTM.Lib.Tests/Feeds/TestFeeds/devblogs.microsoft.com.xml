<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Visual Studio Blog</title>
	<atom:link href="https://devblogs.microsoft.com/visualstudio/feed/" rel="self" type="application/rss+xml" />
	<link>https://devblogs.microsoft.com/visualstudio/</link>
	<description>The official source of product insight from the Visual Studio Engineering Team</description>
	<lastBuildDate>Thu, 12 Jun 2025 17:08:08 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	

<image>
	<url>https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2018/10/Microsoft-Favicon.png</url>
	<title>Visual Studio Blog</title>
	<link>https://devblogs.microsoft.com/visualstudio/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Next edit suggestions available in Visual Studio</title>
		<link>https://devblogs.microsoft.com/visualstudio/next-edit-suggestions-available-in-visual-studio-github-copilot/</link>
					<comments>https://devblogs.microsoft.com/visualstudio/next-edit-suggestions-available-in-visual-studio-github-copilot/#comments</comments>
		
		<dc:creator><![CDATA[Simona Liao]]></dc:creator>
		<pubDate>Mon, 09 Jun 2025 15:00:39 +0000</pubDate>
				<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[GitHub Copilot]]></category>
		<category><![CDATA[Productivity]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Copilot]]></category>
		<category><![CDATA[Next Edits Suggestion]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=253452</guid>

					<description><![CDATA[<p>GitHub Copilot code completions, or gray text, are specialized in autocompleting unfinished code or providing helpful template code. In reality, coding activities are more diverse than writing new code. What if Copilot could better assist your coding not only with code generation, but your code editing activities as well? We are excited to announce next [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/next-edit-suggestions-available-in-visual-studio-github-copilot/">Next edit suggestions available in Visual Studio</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>GitHub Copilot code completions, or gray text, are specialized in autocompleting unfinished code or providing helpful template code. In reality, coding activities are more diverse than writing new code. What if Copilot could better assist your coding not only with code generation, but your code editing activities as well?</p>
<p>We are excited to announce <em>next edit suggestions, </em>or <em>NES</em> for short, is now available in <strong>Visual Studio 2022 17.14</strong> to further improve your coding experience. NES leverages the previous edits made and predicts the next edit to come, whether it’s an insertion, deletion, or mix of both. Unlike Copilot completions which are limited to generating suggestions at your caret location, NES can support you anywhere in your file, where the next edit is most likely to occur.</p>
<h2>Example usage scenarios</h2>
<p>Next edit suggestions can be helpful in a variety of scenarios, not only making obvious repetitive changes like renaming, but also more logical changes when you are adding/removing variables or changing the intention of a method. Here are some examples:</p>
<h4><strong>1. Refactoring a 2D Point class to 3D Point:</strong></h4>
<p><div style="width: 1712px;" class="wp-video"><!--[if lt IE 9]><script>document.createElement('video');</script><![endif]-->
<video class="wp-video-shortcode" id="video-253452-1" width="1712" height="448" preload="metadata" controls="controls"><source type="video/mp4" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Point3-26-1.mp4?_=1" /><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Point3-26-1.mp4">https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Point3-26-1.mp4</a></video></div></p>
<h4><strong>2. Update the code syntax to modern C++ using STL:</strong></h4>
<p>Note that NES is not just making repetitive changes to updating all &#8220;printf() &#8220; to &#8220;std::cout&#8220;, but also updating other syntax such as &#8220;fgets()&#8220;.</p>
<p><div style="width: 1698px;" class="wp-video"><video class="wp-video-shortcode" id="video-253452-2" width="1698" height="618" preload="metadata" controls="controls"><source type="video/mp4" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Migration3-28-1.mp4?_=2" /><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Migration3-28-1.mp4">https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Migration3-28-1.mp4</a></video></div></p>
<h4><strong>3. Make logical changes in response to a newly added variable:</strong></h4>
<p>NES responds quickly to the new variable, which adds the maximum number of guesses a player can make in a game, and Copilot Completions also jumps in to help.</p>
<p><div style="width: 1142px;" class="wp-video"><video class="wp-video-shortcode" id="video-253452-3" width="1142" height="374" preload="metadata" controls="controls"><source type="video/mp4" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/AddingVariable3-28.mp4?_=3" /><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/AddingVariable3-28.mp4">https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/AddingVariable3-28.mp4</a></video></div></p>
<h2></h2>
<h2>Getting started with next edit suggestions</h2>
<p>Enable NES via <strong>Tools &gt; Options &gt; GitHub &gt; Copilot &gt; Copilot Completions &gt; Enable Next Edit Suggestions.</strong></p>
<p>Like completions, all you need to do to get NES is to start coding!</p>
<p>When there is an available edit suggestion, it could be presented in a diff view where the red diff indicates the original code you had, and the green indicates the new one suggested by Copilot to clearly shows any replacement or deletion of your original code.</p>
<p>If the edit is on a different line than the one you are on now, it will suggest you <strong>Tab </strong>to Navigate to the corresponding line first. The arrow in the hint bar indicates where the next edit is located. You won’t need to manually search for related edits anymore; NES will lead the way!</p>
<p><img fetchpriority="high" decoding="async" class="alignnone wp-image-253454" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/a-computer-screen-shot-of-a-program-ai-generated.png" alt="Next edit suggestions pop up with a navigation hint bar that includes Tab and arrow key down, a purple arrow in the gutter space next to the line number, and inline diffs where red indicates the original code and green indicates the new code. The current caret location is on line 1 and the edit is on line 4, thus the navigation hint bar is suggesting the user to hit tab to jump from line 1 to line 4." width="641" height="310" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/a-computer-screen-shot-of-a-program-ai-generated.png 641w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/a-computer-screen-shot-of-a-program-ai-generated-300x145.png 300w" sizes="(max-width: 641px) 100vw, 641px" /></p>
<p>After you are on the same line as the edit, you can <strong>Tab to Accept</strong> the suggestion.</p>
<p><img decoding="async" class="alignnone wp-image-253455" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253452-3.png" alt="Next edit suggestions, still with inline diffs where red indicates the original code and green indicates the new code. Now the caret location is on line 4, where is the part of the suggestion area, so the gutter arrow changes from purple to grey, and the navigation hint bar changes to say Tab accept." width="696" height="273" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253452-3.png 696w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253452-3-300x118.png 300w" sizes="(max-width: 696px) 100vw, 696px" /></p>
<p>In addition to the hint bars, an arrow in the gutter also pops up to indicate that there is an edit suggestion available. You can click on the arrow to explore the edit suggestion menu. This menu allows you to interact with NES using a mouse, when you don’t want to press the Tab key.</p>
<p><img decoding="async" class="alignnone wp-image-253456" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/a-screen-shot-of-a-computer-program-ai-generated.png" alt="Next edit suggestions, still with inline diffs where red indicates the original code and green indicates the new code. The view where user clicks on the gutter arrow, and a context menu pops up below the gutter arrow with three options: Navigate to, Accept, Dismiss" width="675" height="200" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/a-screen-shot-of-a-computer-program-ai-generated.png 675w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/a-screen-shot-of-a-computer-program-ai-generated-300x89.png 300w" sizes="(max-width: 675px) 100vw, 675px" /></p>
<p>See next edit suggestions explained step-by-step:</p>
<p><iframe src="//www.youtube.com/embed/pojy5BGdZTU" width="560" height="314" allowfullscreen="allowfullscreen"></iframe></p>
<p>Please give NES a try today to let it assist you in your logical editing flow! If you have any feedback, our team would love to hear from you through <a href="https://developercommunity.visualstudio.com/VisualStudio">Developer Community</a> to help us keep iterating on and improving NES!</p>
<h2>Check out the new Visual Studio Hub</h2>
<p>Stay connected with everything Visual Studio in one place! Visit the <a href="https://visualstudio.microsoft.com/hub/">Visual Studio Hub</a> for the latest release notes, YouTube videos, social updates, and community discussions.</p>
<h2>Appreciation for your feedback</h2>
<p>Your feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through <a href="https://developercommunity.visualstudio.com/VisualStudio">Developer Community</a>, you help us improve and shape the future of Visual Studio.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/next-edit-suggestions-available-in-visual-studio-github-copilot/">Next edit suggestions available in Visual Studio</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://devblogs.microsoft.com/visualstudio/next-edit-suggestions-available-in-visual-studio-github-copilot/feed/</wfw:commentRss>
			<slash:comments>3</slash:comments>
		
		<enclosure url="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Point3-26-1.mp4" length="4636352" type="video/mp4" />
<enclosure url="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Migration3-28-1.mp4" length="11259416" type="video/mp4" />
<enclosure url="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/AddingVariable3-28.mp4" length="2600441" type="video/mp4" />

			</item>
		<item>
		<title>How to filter C++ Build Insights by project</title>
		<link>https://devblogs.microsoft.com/visualstudio/how-to-filter-c-build-insights-by-project/</link>
					<comments>https://devblogs.microsoft.com/visualstudio/how-to-filter-c-build-insights-by-project/#respond</comments>
		
		<dc:creator><![CDATA[David Li, Moyo Okeremi]]></dc:creator>
		<pubDate>Thu, 05 Jun 2025 15:37:33 +0000</pubDate>
				<category><![CDATA[Debug]]></category>
		<category><![CDATA[Performance]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[C++]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=253442</guid>

					<description><![CDATA[<p>Visual Studio 2022 version 17.14 comes with quality-of-life improvements to its C++ Build Insights integration that will make it easier for you to navigate large multi-project traces and handle long file names for your build inputs and artifacts. What is C++ Build Insights? C++ Build Insights is a powerful tool that lets you visualize and [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/how-to-filter-c-build-insights-by-project/">How to filter C++ Build Insights by project</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Visual Studio 2022 version 17.14 comes with quality-of-life improvements to its C++ Build Insights integration that will make it easier for you to navigate large multi-project traces and handle long file names for your build inputs and artifacts.</p>
<h2><img decoding="async" class="alignnone wp-image-253443" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253442-1.png" alt="Build insights showcasing all the fles/projects build times and parse counts" width="1024" height="576" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253442-1.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253442-1-300x169.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253442-1-768x432.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /></h2>
<h2>What is C++ Build Insights?</h2>
<p>C++ Build Insights is a powerful tool that lets you visualize and optimize the build process of your C++ projects. It leverage MSVC&#8217;s trace capture technology and uses the <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/event-tracing-for-windows--etw-">Windows </a><a id="post-253442-_Int_xZ6H58Ne"></a><a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/event-tracing-for-windows--etw-">ETW</a> framework to collect detailed information about every build event, such as compilation, linking, code analysis, and more. You can then view and analyze this data in many ways, such as a timeline, a <a id="post-253442-_Int_3iP4Rgv0"></a>flame graph, or a tree map. As of Visual Studio 2022 version 17.7, C++ Build Insights is <a href="https://devblogs.microsoft.com/cppblog/build-insights-now-available-in-visual-studio-2022/">integrated into Visual Studio</a>.</p>
<p>C++ Build Insights can help you identify and fix bottlenecks, dependencies, and inefficiencies in your build system, resulting in faster and more reliable builds. You can also compare different builds and see how your changes affect the build performance over time. To learn more, read how <a href="https://developer.microsoft.com/en-us/games/articles/2025/03/gdc-2025-build-insights-call-of-duty-modern-warfare/">Activision used Build Insights to cut Call of Duty’s Build Time by 50%</a> on the Microsoft Game Dev Blog.</p>
<h2>How to Filter C++ Build Insights by Project</h2>
<p>One of the new features in Visual Studio 2022 is the ability to filter your C++ Build Insights results for Visual Studio solutions by project. This can be particularly useful if you have a large solution with multiple projects and you want to focus on one of them. To do this, simply run Build Insights on your solution by selecting <strong>Build &gt; Run Build Insights on Solution</strong> and then either <strong>Build </strong>or <strong>Rebuild,</strong> depending on whether you want to measure the build from scratch. This will generate an ETL (event trace log) trace, which Visual Studio will automatically open to visualize the data collected. Select the project that you want to filter by selecting the funnel next to the <em>Project</em> column and narrowing down the set of projects for which you want to view the data.</p>
<h2>How to Filter C++ Build Insights by File Paths</h2>
<p>In addition to project filtering, Build Insights now also supports file path filtering, which gives you fine-grained control over which files are included in your analysis. This is especially helpful in large codebases where build data from third-party libraries or generated code can clutter your view. With the File Path Filter, you can use glob patterns to focus on specific directories or file types—helping you isolate and investigate the build performance of just the parts you care about. Whether you’re narrowing your focus during a regression investigation or simply trying to understand the build cost of a particular code change, file path filtering helps you get answers faster.</p>
<p>To do this, simply run Build Insights on your solution by selecting <strong>Build &gt; Run Build Insights on Solution</strong> and then either <strong>Build </strong>or <strong>Rebuild,</strong> depending on whether you want to measure the build from scratch. This will generate an ETL (event trace log) trace, which Visual Studio will automatically open to visualize the data collected. Select the project that you want to filter by selecting the funnel next to the File Path column and typing in the glob pattern you want to focus on or ignore.</p>
<h2>How to see the file names and paths of build inputs and artifacts</h2>
<p>Another improvement in Visual Studio is the way Build Insights displays the file names and paths of your build inputs and artifacts, such as source files, object files, libraries, and executables. Instead of showing the full path, which can be quite long and hard to read, Build Insights now shows the relative path and the file name, separated by a backslash. This makes it easier to find your build artifacts, especially if you have a complex folder structure.</p>
<p>You can see the file names and paths of your build inputs and artifacts in any view that shows them, such as the Included Files view, which shows the files that are included by each source file during compilation. You can also hover over any build event to see more details, including the file name and path.</p>
<p>We hope you find these quality-of-life improvements useful and that they help you optimize your C++ build process. We are always working on making Visual Studio better for developers, and we appreciate your continuous feedback and suggestions. Please tell us what you think of these features and what else you want in Build Insights.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/how-to-filter-c-build-insights-by-project/">How to filter C++ Build Insights by project</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://devblogs.microsoft.com/visualstudio/how-to-filter-c-build-insights-by-project/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Cloud Academy: Unlock Your Azure Skills and Accelerate Your Career</title>
		<link>https://devblogs.microsoft.com/visualstudio/cloud-academy-benefit-for-visual-studio-subscribers/</link>
					<comments>https://devblogs.microsoft.com/visualstudio/cloud-academy-benefit-for-visual-studio-subscribers/#comments</comments>
		
		<dc:creator><![CDATA[Jim Harrer]]></dc:creator>
		<pubDate>Tue, 03 Jun 2025 14:00:08 +0000</pubDate>
				<category><![CDATA[Visual Studio]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=253411</guid>

					<description><![CDATA[<p>When we launched the Cloud Academy benefit for Visual Studio Professional and Enterprise subscribers back in March 2025, our goal was simple: give you the hands-on, practical learning experience you need to confidently master Azure and cloud technologies — without spending a dime beyond your subscription. Why? Because in today’s fast-changing tech world, knowing theory [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/cloud-academy-benefit-for-visual-studio-subscribers/">Cloud Academy: Unlock Your Azure Skills and Accelerate Your Career</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>When we launched the Cloud Academy benefit for Visual Studio Professional and Enterprise subscribers back in March 2025, our goal was simple: <strong>give you the hands-on, practical learning experience you need to confidently master Azure and cloud technologies</strong> — without spending a dime beyond your subscription.</p>
<p>Why? Because in today’s fast-changing tech world, knowing theory isn’t enough. You need to <em>do</em> — to experiment, build, troubleshoot, and grow your skills in a real environment. That’s exactly what Cloud Academy delivers.</p>
<h2><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Level-up-your-skills-with-Cloud-Academy-800x300-1.png"><img decoding="async" class="aligncenter size-full wp-image-253414" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Level-up-your-skills-with-Cloud-Academy-800x300-1.png" alt="Level up your skills with Cloud Academy 800 215 300 image" width="800" height="300" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Level-up-your-skills-with-Cloud-Academy-800x300-1.png 800w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Level-up-your-skills-with-Cloud-Academy-800x300-1-300x113.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Level-up-your-skills-with-Cloud-Academy-800x300-1-768x288.png 768w" sizes="(max-width: 800px) 100vw, 800px" /></a></h2>
<h2><strong>From Frustration to Confidence: Learning That Fits Your Style</strong></h2>
<p>If you’re like many developers I’ve talked to, finding time to build new skills feels like a constant struggle. Between deadlines, meetings, and firefighting production issues, carving out space to learn something new is tough.</p>
<p>Cloud Academy understands that. Whether you’re the type who likes step-by-step guided labs, jumping straight into hands-on challenges, or tinkering freely in a safe sandbox, this platform adapts to how <em>you</em> learn best.</p>
<p>The result? <strong>Visual Studio subscribers</strong> are completing labs at a rate 10% higher than other learners on Cloud Academy. That means you’re not just skimming content — you’re gaining meaningful, practical skills that stick.</p>
<h2><strong>What’s New? Fresh Content Tailored for Today’s Cloud Challenges</strong></h2>
<p>Cloud technology evolves rapidly, and staying ahead means keeping your skills sharp. We’ve added new lessons and labs to make sure you’re ready to tackle the latest Azure capabilities and security challenges, including:</p>
<ul>
<li><strong>Automate document processing with Azure AI Document Intelligence Studio</strong> — no coding needed, just real impact.</li>
<li><strong>Strengthen endpoint security with Microsoft Entra ID’s automated password management</strong> — because security can’t be an afterthought.</li>
<li><strong>Streamline device management with Intune device naming templates</strong> — save time and reduce errors.</li>
<li><strong>Dive into Azure OpenAI Service’s prompt engineering</strong> — build AI apps that behave reliably.</li>
<li>…and much more that matches what companies are demanding now.</li>
</ul>
<h2><strong>Hands-On Labs: Where Real Learning Happens</strong></h2>
<p>Reading about cloud services is one thing. Building and deploying containerized apps, automating workflows, or managing state in Azure Container Apps — that’s where the real transformation happens.</p>
<p>Cloud Academy’s labs let you roll up your sleeves in real Azure environments, so you:</p>
<ul>
<li>Push container images and manage registries.</li>
<li>Automate file processing with Azure Functions.</li>
<li>Explore state management with Dapr in container apps.</li>
</ul>
<p>This kind of hands-on experience turns concepts into capabilities, making you more valuable to your team and your company.</p>
<h2><strong>Certification Prep That Works</strong></h2>
<p>Many subscribers are also using Cloud Academy to prep for Microsoft certifications, which are a powerful way to validate your skills and open doors in your career. The top courses are aligned to:</p>
<ul>
<li><strong>AZ-900: Azure Fundamentals</strong> — perfect for getting started.</li>
<li><strong>AZ-204: Developing Azure Solutions</strong> — for building real cloud apps.</li>
<li><strong>AI-900 and AI-102</strong> — tapping into the future of AI on Azure.</li>
<li><strong>AZ-400: Azure DevOps Solutions</strong> — mastering modern cloud development workflows.</li>
</ul>
<p>With lessons, labs, quizzes, and exams, Cloud Academy makes certification prep practical and effective — no more cramming or rote memorization.</p>
<h2><strong>Meet Ela: Your Personal AI-Powered Learning Coach</strong></h2>
<p>Learning alone can be challenging. That’s why Cloud Academy includes Ela, an AI-powered Expert Learning Assistant who’s like having a tutor at your side 24/7.</p>
<p>Ela helps you by:</p>
<ul>
<li>Summarizing complex lessons into bite-sized insights.</li>
<li>Testing your knowledge so you focus on what matters.</li>
<li>Explaining tricky concepts clearly.</li>
<li>Guiding you during hands-on labs to troubleshoot and stay on track.</li>
</ul>
<p>With Ela’s support, you can accelerate your learning, overcome roadblocks, and gain confidence faster than ever before.</p>
<h2><strong>How to Activate Your Cloud Academy Access Today</strong></h2>
<p>Getting started is fast and easy:</p>
<ol>
<li>Log in to <a href="https://my.visualstudio.com" target="_blank" rel="noopener">visualstudio.com</a> with your Visual Studio subscription.</li>
<li>Navigate to the Benefits section.</li>
<li>Activate your Cloud Academy access — no credit card, no trials, just instant access.</li>
<li>This exclusive benefit is available at no extra cost with select Visual Studio subscription levels.</li>
</ol>
<p>To see if you’re Professional or Enterprise subscription is eligible, check out this <a class="" href="https://learn.microsoft.com/en-us/visualstudio/subscriptions/vs-cloud-academy" target="_blank" rel="noopener" data-start="294" data-end="319">document on MS Learn</a>.</p>
<p><strong>Your Next Step Toward Cloud Mastery</strong></p>
<p>At Microsoft, we’re committed to empowering you with tools, training, and resources that truly move the needle. Based on the incredible feedback we’ve received, Cloud Academy is proving to be more than just another training platform — it’s a catalyst for career growth, innovation, and real-world impact.</p>
<p>Whether you want to build apps that scale, improve your security posture, or prepare for certification, Cloud Academy is here to help you every step of the way. Take advantage of this special benefit today and watch how your Azure skills—and your confidence—soar.</p>
<p><strong>Stay Connected with Visual Studio</strong></p>
<p>Don’t forget to visit the <a href="https://visualstudio.com">Visual Studio Hub</a> for the latest updates, videos, and community discussions to keep your developer journey vibrant.</p>
<p>Got thoughts on Visual Studio benefits or Cloud Academy? I’d love to hear from you! Connect with me on LinkedIn.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/cloud-academy-benefit-for-visual-studio-subscribers/">Cloud Academy: Unlock Your Azure Skills and Accelerate Your Career</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://devblogs.microsoft.com/visualstudio/cloud-academy-benefit-for-visual-studio-subscribers/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>Extension Manager updates in Visual Studio</title>
		<link>https://devblogs.microsoft.com/visualstudio/extension-manager-updates-in-visual-studio/</link>
					<comments>https://devblogs.microsoft.com/visualstudio/extension-manager-updates-in-visual-studio/#comments</comments>
		
		<dc:creator><![CDATA[Javier De la Garza]]></dc:creator>
		<pubDate>Mon, 02 Jun 2025 18:13:24 +0000</pubDate>
				<category><![CDATA[Extensibility]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Extensions]]></category>
		<category><![CDATA[Updates]]></category>
		<category><![CDATA[visualstudio.extensibility]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=253400</guid>

					<description><![CDATA[<p>The latest updates in Visual Studio 2022 introduced features specifically designed to improve how you manage extensions. These updates offer tools that help you automate processes, provide detailed controls for configuration, and enhance the user interface to streamline your development workflows. Seamless auto updates Visual Studio now automatically triggers updates whenever you open the Extension [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/extension-manager-updates-in-visual-studio/">Extension Manager updates in Visual Studio</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>The latest updates in Visual Studio 2022 introduced features specifically designed to improve how you manage extensions. These updates offer tools that help you automate processes, provide detailed controls for configuration, and enhance the user interface to streamline your development workflows.</p>
<h2>Seamless auto updates</h2>
<p>Visual Studio now automatically triggers updates whenever you open the Extension Manager window. This ensures you are consistently working with the latest features and fixes without needing to manually initiate updates.</p>
<p><img decoding="async" class="alignnone wp-image-253401" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-1.png" alt="Infobar notifying that an update is available for an extension" width="800" height="219" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-1.png 800w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-1-300x82.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-1-768x210.png 768w" sizes="(max-width: 800px) 100vw, 800px" /></p>
<h2>Infobar notifications for applied updates</h2>
<p>An Infobar will now appear when updates are applied, reminding you to restart Visual Studio. This ensures the updates take effect without requiring additional steps on your part.</p>
<h2>Auto update settings on the extension page</h2>
<p>Settings for auto updates have been integrated directly into the extension page, making it easier to access and configure them. You can quickly adjust preferences without navigating through multiple menus.</p>
<p><img decoding="async" class="alignnone wp-image-253402" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-2.png" alt="Ability to que &quot;update extensions automatically&quot;" width="800" height="211" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-2.png 800w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-2-300x79.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-2-768x203.png 768w" sizes="(max-width: 800px) 100vw, 800px" /></p>
<h2>Filter by pending changes</h2>
<p>A new &#8220;Pending&#8221; category has been added to highlight pending updates or modifications. This feature helps developers like you stay informed about changes that require attention..</p>
<p><img decoding="async" class="alignnone wp-image-253403" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-3.png" alt="Filtering by category &gt; Pending (for pending changes)" width="589" height="270" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-3.png 589w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-3-300x138.png 300w" sizes="(max-width: 589px) 100vw, 589px" /></p>
<h2>Additional auto update settings in Tools &gt; Options</h2>
<p>For better accessibility, auto update settings are also available under **Tools &gt; Options**. This provides an alternative way to manage your preferences in a centralized location.</p>
<p><img decoding="async" class="alignnone wp-image-253404" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-4.png" alt="Showing tools &gt; options additional settings" width="792" height="706" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-4.png 792w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-4-300x267.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/word-image-253400-4-768x685.png 768w" sizes="(max-width: 792px) 100vw, 792px" /></p>
<h3>Simplified settings interface</h3>
<p>The user interface for managing settings has been redesigned to reduce complexity. With fewer clicks and clearer options, configuring your environment is now more intuitive.</p>
<h3>Excluded extensions list</h3>
<p>An excluded extensions list is now available, automatically populating with extensions you choose to exclude from automatic updates. This feature is especially useful for extensions critical to your workflow, where manual update control is preferred.</p>
<h2>Conclusion</h2>
<p>These enhancements in Visual Studio 2022 aim to make extension management more user-friendly and efficient. By automating frequent tasks and providing more granular control, these updates contribute to a streamlined development experience that increase your productivity!</p>
<p>We appreciate the feedback from our developer community, which plays a vital role in shaping these updates. Please continue to share your insights to help us improve Visual Studio with every release.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/extension-manager-updates-in-visual-studio/">Extension Manager updates in Visual Studio</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://devblogs.microsoft.com/visualstudio/extension-manager-updates-in-visual-studio/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>Improve the commands in your extensions</title>
		<link>https://devblogs.microsoft.com/visualstudio/improve-the-commands-in-your-extensions/</link>
					<comments>https://devblogs.microsoft.com/visualstudio/improve-the-commands-in-your-extensions/#respond</comments>
		
		<dc:creator><![CDATA[Mads Kristensen]]></dc:creator>
		<pubDate>Wed, 28 May 2025 15:53:58 +0000</pubDate>
				<category><![CDATA[Extensibility]]></category>
		<category><![CDATA[Reliability]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Extensions]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=253374</guid>

					<description><![CDATA[<p>As Visual Studio extension authors, our goal is to create tools that empower developers across diverse environments. A key part of this mission involves ensuring that your extension commands remain accessible and consistent across all Visual Studio locales. In your VSSDK extensions, by adding the CanonicalName property to your commands in the .vsct file, you [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/improve-the-commands-in-your-extensions/">Improve the commands in your extensions</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>As Visual Studio extension authors, our goal is to create tools that empower developers across diverse environments. A key part of this mission involves ensuring that your extension commands remain accessible and consistent across all Visual Studio locales. In your VSSDK extensions, by adding the <em>CanonicalName</em> property to your commands in the .vsct file, you can achieve greater resilience and user satisfaction for your extension.</p>
<p>And with a few simple tricks, you can make your command names a lot prettier as well.</p>
<h2>Why add the <em>CanonicalName</em> property?</h2>
<p>When a Visual Studio extension supports multiple locales, the names of commands can vary based on localized resources. While this improves usability in specific languages, it can sometimes lead to inconsistencies or challenges in maintaining a stable reference to commands programmatically. For example, if a command’s name changes between locales, automation scripts, or even third-party integrations referencing that command may break.</p>
<p>The <em>CanonicalName</em> property solves this issue by providing a stable, locale-independent identifier for your commands. With this property:</p>
<ul>
<li><strong>Commands are more predictable</strong>: Developers referencing your extension programmatically can rely on a fixed name across all locales.</li>
<li><strong>Better integration</strong>: Tools and integrations can seamlessly reference commands without needing locale-specific handling.</li>
<li><strong>Enhanced user experience</strong>: End users benefit from consistent behavior and fewer issues caused by localization mismatches.</li>
</ul>
<h2>Step-by-step guide to adding <em>CanonicalName</em></h2>
<p>Here’s how you can add the <em>CanonicalName</em> property to your commands in the .vsct file of your Visual Studio extension:</p>
<h3>1. Locate Your .vsct File</h3>
<p>The .vsct (Visual Studio Command Table) file defines the commands for your extension. It’s usually found in the root folder of your Visual Studio extension project.</p>
<h3>2. Add the <em>CanonicalName</em> Attribute to Commands</h3>
<p>Within the .vsct file, commands are defined using the <em>&lt;Button&gt;</em>, <em>&lt;Combo&gt;</em> or <em>&lt;Menu&gt;</em> elements. To add the <em>CanonicalName</em> property, include it as a child inside the <em>&lt;Strings&gt;</em> element. Here’s an example:</p>
<pre><code class="language-xml">&lt;Button guid="guidMyExtensionCmdSet" id="cmdidMyCommand" priority="0x0100" type="Button"&gt;
  &lt;Parent guid="guidMyExtensionCmdSet" id="MyMenuGroup" /&gt;
  &lt;Icon guid="guidImages" id="bmpPic1" /&gt;
  &lt;Strings&gt;
    &lt;ButtonText&gt;My Command&lt;/ButtonText&gt;
    &lt;CanonicalName&gt;.MyExtension.MyCommandName&lt;/CanonicalName&gt;
  &lt;/Strings&gt;
&lt;/Button&gt;
</code></pre>
<h3>3. Ensure uniqueness of <em>CanonicalName</em></h3>
<p>The value you assign to <em>CanonicalName </em>must be unique across all commands in your extension. Use meaningful and descriptive identifiers that reflect the command’s purpose.</p>
<h2>Best practices for using CanonicalName</h2>
<ul>
<li><strong>Use PascalCase</strong>: Follow consistent naming conventions like PascalCase for the <em>CanonicalName</em> values.</li>
<li><strong>Keep it descriptive</strong>: Make the names meaningful to help developers understand the purpose of the command without additional context.</li>
<li><strong>Avoid localization</strong>: The <em>CanonicalName</em> should always remain in English and free from localization to ensure consistency.</li>
<li><strong>Start with a period</strong>: This ensures that nothing is added in front of the command name. This is to avoid command names that look like <em>OtherContextMenus.MyExtension.MyCommandName</em>. The leading period is stripped automatically by VS, so it won’t show up.</li>
<li><strong>Lead with the extension name</strong>: This is to make it very clear that this command is provided by your extension. It also makes it easy for users to search for all commands provided by your extension.</li>
</ul>
<h2>We’ve updated the XML Schema file</h2>
<p>To reflect this best practice of providing the <a id="post-253374-_Int_FiBrOQXS"></a>CanonicalName property with all commands, we’ve updated the schema file to provide in-editor warnings when it is missing. It’s just a warning and it doesn’t affect the VSCT Compiler which will continue to compile the command table as it always has. This is simply a change to make it easier for you to remember to add the property. It will be included in a future update to Visual Studio.</p>
<h3><strong>Conclusion</strong></h3>
<p>Adding the <em>CanonicalName</em> property to your commands in the .vsct file is a small but impactful change that enhances the resilience and usability of your Visual Studio extensions. By ensuring consistent references across all locales, you’ll provide a smoother experience for developers and maintain a higher-quality extension.</p>
<p>Take a moment to review your extension’s .vsct file and implement this property where necessary. It’s a straightforward step toward making your tools even more powerful and user-friendly.</p>
<p>Happy coding!</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/improve-the-commands-in-your-extensions/">Improve the commands in your extensions</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://devblogs.microsoft.com/visualstudio/improve-the-commands-in-your-extensions/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>VisualStudio.Extensibility: Editor classification and updates to user prompt</title>
		<link>https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-editor-classification-and-updates-to-user-prompt/</link>
					<comments>https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-editor-classification-and-updates-to-user-prompt/#comments</comments>
		
		<dc:creator><![CDATA[Tina Schrepfer (LI)]]></dc:creator>
		<pubDate>Tue, 27 May 2025 16:00:42 +0000</pubDate>
				<category><![CDATA[Extensibility]]></category>
		<category><![CDATA[Productivity]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Extensions]]></category>
		<category><![CDATA[visualstudio.extensibility]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=253359</guid>

					<description><![CDATA[<p>We continue to invest in the VisualStudio.Extensibility SDK to allow users like you to create extensions that run faster and smoother than ever before! VisualStudio.Extensibility helps you build extensions that run outside the main Visual Studio IDE process for improved performance, reliability, and installation without restarting Visual Studio. Additional benefits include a sleek and intuitive [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-editor-classification-and-updates-to-user-prompt/">VisualStudio.Extensibility: Editor classification and updates to user prompt</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>We continue to invest in the VisualStudio.Extensibility SDK to allow users like you to create extensions that run faster and smoother than ever before! VisualStudio.Extensibility helps you build extensions that run outside the main Visual Studio IDE process for improved performance, reliability, and installation without restarting Visual Studio. Additional benefits include a sleek and intuitive .NET 8-based API and comprehensive, well-maintained documentation to help you develop amazing extensions faster than ever before.</p>
<p><div class="d-flex justify-content-left"><a class="cta_button_link btn-primary mb-24" href="https://aka.ms/VisualStudio.Extensibility" target="_blank">Get Started with VisualStudio.Extensibility</a></div></p>
<p>For the latest up-to-date docs and installation instructions, visit <a href="https://aka.ms/VisualStudio.Extensibility">https://aka.ms/VisualStudio.Extensibility</a>. We encourage you to report bugs and suggest features via the <a href="https://aka.ms/VisualStudio.Extensibility/Issues">issue tracker</a> on our <a href="https://aka.ms/VisualStudio.Extensibility/Repo">GitHub repo</a>, where you can also find extension <a href="https://aka.ms/VisualStudio.Extensibility/Samples">samples</a> to help you get started. We have also launched a new video series on Visual Studio Toolbox to provide a more detailed tour of our samples. Check out the series <a href="https://aka.ms/vsextensibilityseries">here</a>!</p>
<h2>What’s new for VisualStudio.Extensibility for 17.14?</h2>
<p>Our 17.14 release of VisualStudio.Extensibility includes the following features:</p>
<ul>
<li>Text classification support</li>
<li>Updates to the ShowPromptAsync API</li>
</ul>
<p>This release also includes a previously <a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-managing-net-runtime-versions/">mentioned</a> change regarding .NET runtime management requirements. VisualStudio.Extensibility extensions are executed on a separate .NET runtime host, unlike VSSDK extensions which run in the same process as devenv.exe, using the .NET Framework runtime. Since VisualStudio.Extensibility extensions operate on .NET, we must adhere to the runtime servicing lifetime of .NET. Consequently, the VisualStudio.Extensibility platform will be regularly updated to advance to newer versions of .NET LTS. For more information on how this affects you as an extension developer or consumer, please refer to our documentation here.</p>
<h2>Color text in files with classification support</h2>
<p>In Visual Studio <a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-tagger-support-and-updates-to-settings/">17.13</a>, we added support for taggers in the editor, allowing advanced functionalities such as custom code lens providers. This enhancement laid the groundwork for the text classification feature we are introducing in 17.14. Text classification facilitates custom text coloring within an opened file, commonly referred to as semantic and syntactic colorization. The following snippet demonstrates the creation of classification tags, which are fundamental to implementing editor classification. Please note that the example provided is a very simplistic approach and should not be used without further refinement. For a more comprehensive guide on writing a classification extension, please refer to our <a href="https://learn.microsoft.com/en-us/visualstudio/extensibility/visualstudio.extensibility/editor/walkthroughs/classification?view=vs-2022">documentation</a> and <a href="https://github.com/microsoft/VSExtensibility/tree/main/New_Extensibility_Model/Samples/ClassificationSample">sample materials</a>.</p>
<pre class="prettyprint language-csharp"><code class="language-csharp">private async Task CreateTagsAsync(ITextDocumentSnapshot document)
{
   List&lt;TaggedTrackingTextRange&lt;ClassificationTag&gt;&gt; tags = new();
   foreach (var line in document.Lines)
   {
      var match = LineRegex.Match(line.Text.CopyToString());

      if (match.Success)
      {
         foreach (Capture capture in match.Groups[FieldTextMatchName].Captures)
         {
            tags.Add(new(
new(document, line.Text.Start + capture.Index, capture.Length, TextRangeTrackingMode.ExtendNone),
new(ClassificationType.KnownValues.String)));
         }
      }
   }

   await this.UpdateTagsAsync(
      updatedRanges: [new(document, 0, document.Length)],
      tags,
      CancellationToken.None);
}
</code></pre>
<h2>Display icons and prompt for input with an enhanced ShowPromptAsync API</h2>
<p>We routinely assess suggestion tickets that track requests for new APIs to be integrated into VisualStudio.Extensibility. Numerous factors influence our decision on which features to prioritize, including the complexity and cost of implementation. In version 17.14, we are pleased to announce that we have addressed a community-requested <a href="https://developercommunity.visualstudio.com/t/VisualStudioExtensibility-Add-support/10563532">feature</a> by introducing icon support in our ShowPromptAsync API. Furthermore, we have added the capability to provide user-input prompt. Below is a code snippet demonstrating how to configure a user prompt with custom icons, titles, messages, and options. For more detailed information, please refer to our <a href="https://learn.microsoft.com/en-us/visualstudio/extensibility/visualstudio.extensibility/user-prompt/user-prompts?view=vs-2022">documentation</a>.</p>
<pre class="prettyprint language-csharp"><code class="language-csharp">// Show a prompt that accepts string input from the user, with a default value, custom title and custom icon.

string? feedback = await shell.ShowPromptAsync(
   $"Thank you for configuring {projectName}. Do you have any feedback?",
   new InputPromptOptions
   {
      DefaultText = feedbackPrompt,
      Icon = ImageMoniker.KnownValues.Feedback,
      Title = Title,
   },
   cancellationToken);

this.logger.TraceInformation($"Feedback received: {feedback}");
</code></pre>
<h2>We want to hear from you!</h2>
<p>We appreciate the time you’ve spent reporting issues/suggestions and hope you continue to give us feedback when using Visual Studio on what you like and what we can improve. Your feedback is critical to help us make Visual Studio the best tool it can be! You can share feedback with us via <a href="https://developercommunity.visualstudio.com/home%22%20/t%20%22_blank" target="_blank" rel="noopener">Developer Community</a>: report any bugs or issues via <a href="https://learn.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2022" target="_blank" rel="noopener">report a problem</a> and <a href="https://developercommunity.microsoft.com/VisualStudio/suggest" target="_blank" rel="noopener">share your suggestions</a> for new features or improvements to existing ones.</p>
<p>Stay connected with the Visual Studio team by following us on <a href="https://www.youtube.com/@visualstudio" target="_blank" rel="noopener">YouTube</a>, <a href="https://twitter.com/VisualStudio" target="_blank" rel="noopener">Twitter</a>, <a href="https://www.linkedin.com/showcase/microsoft-visual-studio/" target="_blank" rel="noopener">LinkedIn</a>, <a href="https://www.twitch.tv/visualstudio" target="_blank" rel="noopener">Twitch</a> and on <a href="https://learn.microsoft.com/en-us/visualstudio/?view=vs-2022" target="_blank" rel="noopener">Microsoft Learn</a>.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-editor-classification-and-updates-to-user-prompt/">VisualStudio.Extensibility: Editor classification and updates to user prompt</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-editor-classification-and-updates-to-user-prompt/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Connecting to Private NuGet Feeds Just Got Easier</title>
		<link>https://devblogs.microsoft.com/visualstudio/connecting-to-private-nuget-feeds-just-got-easier/</link>
					<comments>https://devblogs.microsoft.com/visualstudio/connecting-to-private-nuget-feeds-just-got-easier/#comments</comments>
		
		<dc:creator><![CDATA[Ruben Rios]]></dc:creator>
		<pubDate>Wed, 21 May 2025 15:55:18 +0000</pubDate>
				<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Authentication]]></category>
		<category><![CDATA[NuGet]]></category>
		<category><![CDATA[nuget packages]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=253176</guid>

					<description><![CDATA[<p>The Visual Studio 2022 17.14 update is here, and it brings great quality-of-life improvements—especially around NuGet authentication. From context about the authentication needs of private NuGet feeds to a simplified account selection workflow, this update helps you stay focused on your code! If you haven’t already, download the latest Visual Studio update to take advantage [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/connecting-to-private-nuget-feeds-just-got-easier/">Connecting to Private NuGet Feeds Just Got Easier</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>The <a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-14-is-now-generally-available/">Visual Studio 2022 17.14 update is here</a>, and it brings great quality-of-life improvements—especially around NuGet authentication. From context about the authentication needs of private NuGet feeds to a simplified account selection workflow, this update helps you stay focused on your code! If you haven’t already, <a href="https://visualstudio.microsoft.com/downloads/">download</a> the latest Visual Studio update to take advantage of this and the rest of the improvements.</p>
<h2><strong>Streamlining the NuGet authentication experience</strong></h2>
<p>Over the past year, we’ve made significant strides to improve the identity and authentication experiences across Visual Studio 2022. For instance, we introduced <a href="https://devblogs.microsoft.com/visualstudio/enhancing-your-visual-studio-authentication-experience/">Web Account Manager (WAM) support</a> to unify and simplify the sign-in experience of Entra ID accounts &amp; we recently followed that up by adding <a href="https://devblogs.microsoft.com/visualstudio/boost-your-github-productivity-with-our-new-multi-account-support/">multi-account support for GitHub</a>, making it easier than ever to manage your GitHub identities inside Visual Studio.</p>
<p>Today, we’re excited to share the next step in that journey: a more intuitive and reliable NuGet authentication experience. With the latest update, Visual Studio now proactively detects when authentication is needed during package restore and presents a new dialog that provides helpful context—such as which feed you’re attempting to access—and makes it easy to select the account best suited for the job. This small but impactful change simplifies the sign-in process, reduces authentication prompts, and helps you stay focused on your coding needs.</p>
<p>Here’s what you can expect:</p>
<ul>
<li><strong>Clearer sign-in guidance</strong> showing you the specific NuGet feed you are accessing.</li>
<li><strong>Improved support for multi-factor authentication (MFA) </strong>allows you to efficiently manage accounts needed for NuGet restore operations, whether adding new accounts, selecting from existing ones, or re-entering credentials directly within the dialog.</li>
<li><strong>A more predictable sign in experience</strong>, with fewer repeated prompts and less authentication guesswork.</li>
</ul>
<h2><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/Improved-Nuget.png"><img decoding="async" class="alignnone size-full wp-image-253325" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/Improved-Nuget.png" alt="Improved Nuget image" width="608" height="298" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/Improved-Nuget.png 608w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/Improved-Nuget-300x147.png 300w" sizes="(max-width: 608px) 100vw, 608px" /></a></h2>
<h2><strong>Try It Out and Keep the Feedback Coming</strong></h2>
<p>We’ll continue investing in making the Visual Studio’s identity and authentication experiences more seamless, secure, and intuitive so please, keep the feedback coming— Every <a href="https://developercommunity.visualstudio.com/VisualStudio">suggestion, upvote</a>, and <a href="https://learn.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2022">report</a> helps us prioritize the areas that matter most to you. And while we’ve made great progress, we’re far from done!</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/connecting-to-private-nuget-feeds-just-got-easier/">Connecting to Private NuGet Feeds Just Got Easier</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://devblogs.microsoft.com/visualstudio/connecting-to-private-nuget-feeds-just-got-easier/feed/</wfw:commentRss>
			<slash:comments>11</slash:comments>
		
		
			</item>
		<item>
		<title>Faster .NET Upgrades Powered by GitHub Copilot</title>
		<link>https://devblogs.microsoft.com/visualstudio/faster-net-upgrades-powered-by-github-copilot/</link>
					<comments>https://devblogs.microsoft.com/visualstudio/faster-net-upgrades-powered-by-github-copilot/#comments</comments>
		
		<dc:creator><![CDATA[McKenna Barlow]]></dc:creator>
		<pubDate>Mon, 19 May 2025 16:00:43 +0000</pubDate>
				<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[GitHub Copilot]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[.NET]]></category>
		<category><![CDATA[.NET upgrade]]></category>
		<category><![CDATA[Modernization]]></category>
		<category><![CDATA[Upgrade]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=253273</guid>

					<description><![CDATA[<p>Introducing GitHub Copilot app modernization – Upgrade for .NET You probably don’t look forward to the process of modernizing your applications. It can be time consuming, risky, and full of manual toil. Today we’re changing that. We’re thrilled to introduce the public preview of GitHub Copilot app modernization &#8211; Upgrade for .NET, an AI-powered experience [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/faster-net-upgrades-powered-by-github-copilot/">Faster .NET Upgrades Powered by GitHub Copilot</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<h2>Introducing GitHub Copilot app modernization – Upgrade for .NET</h2>
<p>You probably don’t look forward to the process of modernizing your applications. It can be time consuming, risky, and full of manual toil. Today we’re changing that.</p>
<p>We’re thrilled to introduce the public preview of <strong>GitHub Copilot app modernization &#8211; Upgrade for .NET</strong>, an AI-powered experience that helps you bring your .NET applications to the latest version quicker and more confidently than ever before. Powered by GitHub Copilot and Agent Mode, it serves as an intelligent upgrade companion that understands your code, determines the right upgrade path, and applies changes step by step with minimal manual effort.</p>
<p>Read more about the public preview on our <a href="https://devblogs.microsoft.com/dotnet/github-copilot-upgrade-dotnet">.NET blog.</a></p>
<h2>Get Started with Faster .NET Upgrades Today!</h2>
<p>Getting started with GitHub Copilot app modernization &#8211; Upgrade for .NET is easy.</p>
<p><strong>Step 1: Install the Extension</strong>
Head to the Visual Studio Marketplace and download the <strong>GitHub Copilot app modernization &#8211; Upgrade for .NET </strong>extension. Once installed, you’re ready!</p>
<p><strong>Step 2: Use Copilot Agent Mode</strong>
To unlock the full power of AI-assisted upgrades, install the latest version of <a href="https://visualstudio.microsoft.com/downloads/">Visual Studio 17.14</a> and sign-in to a GitHub account with an active Copilot subscription.</p>
<ol>
<li><strong>Ensure you have agent mode enabled:</strong> In Visual Studio, go to Tools &gt; Options &gt; GitHub &gt; Copilot &gt; Copilot Chat and select &#8220;Enable agent mode in the chat pane.&#8221;</li>
<li><strong>Turn on Agent Mode</strong>: To get started, open the GitHub Copilot Chat window, click the “<strong>Ask</strong>” button, then click “<strong>Agent</strong>”. This turns on Copilot Agent Mode, which gives you a smarter, more natural way to do the upgrades.</li>
<li><strong>Select the Upgrade Tool:</strong> Once in Copilot Agent Mode, be sure to select the “<strong>Upgrade”</strong> tool from the Copilot Chat Tool Selector. Otherwise, Agent Mode won’t be able to use the specialized upgrade tools.</li>
</ol>
<p><img decoding="async" width="400" height="436" class="wp-image-253276" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-gif-of-a-user-selecting-the-correct-tool-in-agen.gif" alt="A GIF of a user selecting the correct tool in Agent Mode in Copilot Chat " /></p>
<p>For more information on Agent Mode, check out <a href="https://devblogs.microsoft.com/visualstudio/agent-mode-has-arrived-in-preview-for-visual-studio/">our blog</a> on the topic.</p>
<h2>How to Run the Upgrade</h2>
<p>You’ve got two options:</p>
<p>Right-click your project or solution in Solution Explorer and select “Upgrade with GitHub Copilot”</p>
<p><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/solution-explorer-invocation-1.gif"><img decoding="async" class="alignnone size-full wp-image-253289" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/solution-explorer-invocation-1.gif" alt="solution explorer invocation 1 image" width="400" height="406" /></a></p>
<p>Or, just tell Copilot what you want to do in the chat:
<img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f449.png" alt="👉" class="wp-smiley" style="height: 1em; max-height: 1em;" /> <em>“Upgrade my solution to .NET 8”</em></p>
<p><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/help-me-upgrade-my-solution-1.gif"><img decoding="async" class="alignnone size-full wp-image-253290" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/help-me-upgrade-my-solution-1.gif" alt="help me upgrade my solution 1 image" width="400" height="635" /></a></p>
<p>That’s it. GitHub Copilot gets to work analyzing your code, preparing the upgrade, and guiding you through code changes.</p>
<h2>What’s Included?</h2>
<p><strong><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f6e0.png" alt="🛠" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Automated code transformations:</strong> Copilot automatically makes the changes required to get your applications running on modern .NET.</p>
<p><div style="width: 1920px;" class="wp-video"><video class="wp-video-shortcode" id="video-253273-4" width="1920" height="1080" preload="metadata" controls="controls"><source type="video/mp4" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/GHCPUA-Update-Progress-Focus-1.mp4?_=4" /><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/GHCPUA-Update-Progress-Focus-1.mp4">https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/GHCPUA-Update-Progress-Focus-1.mp4</a></video></div></p>
<p><strong><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/2699.png" alt="⚙" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Customizable workflows:</strong> You can tailor which projects to upgrade, whether to address packages with security vulnerabilities in your upgrade, and more.</p>
<p><strong><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f9e0.png" alt="🧠" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Learning from your manual changes:</strong> When manual intervention is required, GitHub Copilot can learn from your manual changes and apply those learnings if it encounters a similar situation later on in your upgrade.</p>
<p><img decoding="async" width="400" height="619" class="wp-image-253280" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-gif-showingcopilot-acknowledging-its-recording.gif" alt="A GIF showingCopilot acknowledging it's recording user changes and learning from manual interventions" /></p>
<p><strong><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f500.png" alt="🔀" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Git Integration:</strong> Git commits are automatically created on your behalf so that you can adopt and test changes incrementally.</p>
<p><img decoding="async" class="wp-image-253281" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-screenshot-of-the-commits-generated-by-the-tool.png" alt="A screenshot of the commits generated by the tool " width="727" height="424" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-screenshot-of-the-commits-generated-by-the-tool.png 1080w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-screenshot-of-the-commits-generated-by-the-tool-300x175.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-screenshot-of-the-commits-generated-by-the-tool-1024x597.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-screenshot-of-the-commits-generated-by-the-tool-768x448.png 768w" sizes="(max-width: 727px) 100vw, 727px" /></p>
<p><strong><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/2705.png" alt="✅" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Automatic test validation:</strong> It automatically runs your application’s unit tests to ensure correct behavior post-upgrade.</p>
<p><strong><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f916.png" alt="🤖" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Agent Mode functionality:</strong> Take advantage of Copilot Agent Mode with the latest preview version of Visual Studio installed.</p>
<h2>Please Share Your Feedback</h2>
<p>Start your upgrade journey today with GitHub Copilot app modernization – Upgrade for .NET! Your feedback is crucial to us as we aim to improve the product during this public preview. To share feedback with the team, please utilize the “Leave Feedback” button in the upper right corner of the Upgrade Manager UX in Visual Studio.</p>
<p><img decoding="async" width="973" height="607" class="wp-image-253282" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-screenshot-of-the-upgrade-monitor-ux-showing-whe.png" alt="A screenshot of the Upgrade Monitor UX showing where to find the Leave Feedback button" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-screenshot-of-the-upgrade-monitor-ux-showing-whe.png 973w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-screenshot-of-the-upgrade-monitor-ux-showing-whe-300x187.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/a-screenshot-of-the-upgrade-monitor-ux-showing-whe-768x479.png 768w" sizes="(max-width: 973px) 100vw, 973px" /></p>
<p>We also welcome feedback via email to <a href="mailto:ghcpuacusteng@microsoft.com">ghcpuacusteng@microsoft.com</a>, as well as direct responses to our <a href="https://www.surveymonkey.com/r/5G3BDTD?source=vsblog">feedback survey</a>.</p>
<h2>Check out the new Visual Studio Hub</h2>
<p>Stay connected with everything Visual Studio in one place! Visit the <a href="https://visualstudio.microsoft.com/hub/">Visual Studio Hub</a> for the latest release notes, YouTube videos, social updates, and community discussions.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/faster-net-upgrades-powered-by-github-copilot/">Faster .NET Upgrades Powered by GitHub Copilot</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://devblogs.microsoft.com/visualstudio/faster-net-upgrades-powered-by-github-copilot/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		<enclosure url="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/GHCPUA-Update-Progress-Focus-1.mp4" length="4797367" type="video/mp4" />

			</item>
		<item>
		<title>How to Watch Microsoft Build 2025 Online</title>
		<link>https://devblogs.microsoft.com/visualstudio/how-to-watch-microsoft-build-2025-online/</link>
					<comments>https://devblogs.microsoft.com/visualstudio/how-to-watch-microsoft-build-2025-online/#comments</comments>
		
		<dc:creator><![CDATA[Jim Harrer]]></dc:creator>
		<pubDate>Fri, 16 May 2025 14:00:41 +0000</pubDate>
				<category><![CDATA[Events]]></category>
		<category><![CDATA[GitHub Copilot]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[MSBuild]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=253248</guid>

					<description><![CDATA[<p>Microsoft Build 2025 Is Here! — How to Make the Most of It Virtually It’s that time again—Microsoft Build has started! Microsoft Build 2025 runs this week (May 19–22)—and now’s the perfect time to catch the sessions live or watch past sessions on-demand. This year, Build is more accessible than ever. Every keynote, breakout session, [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/how-to-watch-microsoft-build-2025-online/">How to Watch Microsoft Build 2025 Online</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<article>
<h1>Microsoft Build 2025 Is Here! — How to Make the Most of It Virtually</h1>
<p>It’s that time again—<strong>Microsoft Build</strong> has started! Microsoft Build 2025 runs this week (May 19–22)—and now’s the perfect time to catch the sessions live or watch past sessions on-demand.</p>
<p>This year, <strong>Build is more accessible than ever.</strong> Every keynote, breakout session, demo theater, and even our hands-on labs are available to stream—<strong>live or on-demand</strong>—completely free. No travel. No ticket. Just you, your browser, and some of the best developer content of the year.</p>
<p>I’ve had the privilege of working alongside our Product Managers and Engineering teams to help bring these new experiences to life. And I can confidently say—this year’s lineup is comprehensive, with something for every Visual Studio user. From deep dives into .NET and GitHub Copilot in Visual Studio, to lightning-fast demo theaters and hands-on labs powered by the Microsoft Skillable platform, there’s truly something for everyone.</p>
<p><div class="d-flex justify-content-left"><a class="cta_button_link btn-primary mb-24" href="https://build.microsoft.com/sessions" target="_blank">SCHEDULE BUILDER</a></div></p>
<h2>Step 1: Customize Your Schedule</h2>
<p>If you do just one thing today, head over to <a href="https://build.microsoft.com" target="_blank" rel="noopener">build.microsoft.com</a> and use the free Schedule Builder. It’s the easiest way to:</p>
<ul>
<li><strong>Add Must Watch</strong> sessions from Satya Nadella, Kevin Scott, Amanda Silver, and Scott Guthrie and friends.</li>
<li><strong>Pick breakouts</strong> tailored to your interests—Visual Studio, AI agents, .NET 9, GitHub Copilot, Azure, and more.</li>
<li><strong>Queue up on-demand sessions</strong> you can catch later, even after the event ends.</li>
</ul>
<p><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f4a1.png" alt="💡" class="wp-smiley" style="height: 1em; max-height: 1em;" /> And this year, keep an eye out for “AI Agents” and “Agentic” —a new way to think about how AI works with you, not just for you. Visual Studio is evolving, and the sessions hinting at this shift are worth flagging.</p>
<h2>Step 2: Prioritize Live Viewing (and Must-Watch Sessions)</h2>
<p>Many sessions—especially keynotes—feature live Q&amp;A and real-time demos you won’t want to miss. And with <strong>133 sessions focused on Developer Tools and .NET</strong>, there’s truly something for everyone.</p>
<p>I encourage you to use the <a href="https://build.microsoft.com/" target="_blank" rel="noopener">schedule builder</a> and find the topics you’re interested in. Here are just a few I’ll be attending in person to help get you started:</p>
<h3>Must Watch!</h3>
<ul>
<li><a href="https://build.microsoft.com/en-US/sessions/KEY010" target="_blank" rel="noopener"><strong>Opening Keynote with Satya Nadella</strong></a> – Big-picture announcements across AI, Copilot, and developer platforms.</li>
<li><a href="https://build.microsoft.com/en-US/sessions/KEY020" target="_blank" rel="noopener"><strong>Unpacking the tech with Kevin Scott, Charles Lamanna, and Scott Guthrie</strong></a> – A deeper look at what’s next for developers using Microsoft tools.</li>
<li><a href="https://build.microsoft.com/en-US/sessions/BRK100" target="_blank" rel="noopener"><strong>Reimagining Software Development and DevOps with Agentic AI</strong></a> &#8211; Amanda Silver and Mario Rodriguez show how Agentic AI is being infused across the entire development lifecycle—from brainstorming to release. See how GitHub Copilot is evolving to help teams plan smarter, code faster, and stay in flow across Visual Studio and GitHub.</li>
<li><strong><a href="https://build.microsoft.com/en-US/sessions/KEY040" target="_blank" rel="noopener">Epic Closing Demo with Mark Russinovich and Scott Hanselman </a></strong>-A high-energy, code-first finale weaving together Build’s boldest tech—from Copilot PCs to frontier models, Visual Studio, and vibe coding—all live with Mark and Scott.</li>
</ul>
<h3>More to add to your watch list:</h3>
<ul>
<li><strong><a href="https://build.microsoft.com/en-US/sessions/BRK120" target="_blank" rel="noopener">Top GitHub Copilot Features You Missed in Visual Studio 2022</a> &#8211; </strong>Visual Studio now delivers its most AI-powered experience yet—with GitHub Copilot deeply integrated into your daily workflow. In this session, we’ll walk through the latest Copilot features lighting up in Visual Studio, including Agent Mode (Preview), which brings goal-driven, multi-step assistance right into the IDE.</li>
<li><strong><a href="https://build.microsoft.com/en-US/sessions/BRK101" target="_blank" rel="noopener">The Future of .NET App Modernization Streamlined with AI</a> &#8211; </strong>GitHub Copilot and Agents are transforming how developers modernize their applications and get them cloud ready. Come see how GitHub Copilot Upgrade for .NET helps you upgrade your .NET applications directly from Visual Studio. From project and dependency analysis, plan execution, automatic self-healing, detailed reporting, and more. Hear from industry experts who are transforming their .NET app modernization with GitHub Copilot.</li>
<li><strong><a href="https://build.microsoft.com/en-US/sessions/BRK121" target="_blank" rel="noopener">Yet &#8220;Another Highly Technical Talk&#8221; with Hanselman and Toub</a> &#8211; </strong>Following from their &#8220;Highly Technical Talk&#8221; at Build 2024, join Scott Hanselman and partner software engineer Stephen Toub for another talk that is 100% LIVE demo. Zero slides, just code. In this &#8220;highly technical talk&#8221; on the internals of .NET, they&#8217;ll look for performance issues and fix them live on stage. In this talk, you&#8217;ll learn debugging, performance, and optimization skills. If you are super advanced, level up, and let&#8217;s see how deep you can go!</li>
<li><strong><a href="https://build.microsoft.com/en-US/sessions/BRK127" target="_blank" rel="noopener">Unleash Developer Potential with AI and Dev Box</a> &#8211; </strong>Microsoft Dev Box is reimagining the developer environment. See how this customizable, project-focused platform supports AI development with flexible compute, seamless integration with Visual Studio and VS Code, and team-specific setups that go beyond traditional VDI. Learn how Dev Box is enabling the next generation of productivity.</li>
</ul>
<h3>Demo Theaters and Labs:</h3>
<p>Demo Theaters and Labs give you two great ways to explore what’s new. Demos are quick, 15-minute lightning sessions—perfect for discovering new features and getting inspired fast. Labs go deeper with guided, hands-on experiences you can follow step-by-step, right in your browser. Whether you join live or watch later, both formats are available online and designed to fit your pace.</p>
<ul>
<li><strong><a href="https://build.microsoft.com/en-US/sessions/LAB300" target="_blank" rel="noopener">Lab: Hands-on with GitHub Copilot in Visual Studio</a> &#8211; </strong>Want to go from curious to confident with Copilot in Visual Studio? This lab walks you through real scenarios that show just how integrated and helpful Copilot has become.
Get guided, interactive practice using AI inside the IDE.</li>
<li><strong><a href="https://build.microsoft.com/en-US/sessions/DEM517" target="_blank" rel="noopener">Demo: Build, Deploy &amp; Use Your First Model Context Protocol (MCP) Server</a> &#8211; </strong>Curious about what MCP really is? This lightning-fast session will walk you through building your very first Model Context Protocol server from scratch. You’ll create it in VS Code, test it live, and deploy it—learning why this matters for agent-based development along the way.</li>
</ul>
<p><strong>Can’t catch them all live?</strong> No worries—<strong>everything is available on-demand</strong> after Build so you can watch at your own pace.</p>
<h2>Step 3: Stay Connected</h2>
<p>Follow the conversation on <strong>#MSBuild, #VisualStudio</strong> and <strong>#dotNET</strong> on X. Ask questions, share what you’re learning, and connect with other developers from around the world. You’ll find inspiration in the comments—and maybe even a new collaborator.</p>
<p><strong>Use the Schedule Builder today.</strong>
Start building your watchlist now at <a href="https://build.microsoft.com" target="_blank" rel="noopener">build.microsoft.com</a>, and I’ll see you—virtually—next week.</p>
<p>Let’s code the future together.</p>
<p>&#8230;.Jim</p>
<hr />
<h3>Check out the new Visual Studio Hub</h3>
<p>Stay connected with everything Visual Studio in one place! Visit the <a href="https://visualstudio.microsoft.com/hub/" target="_blank" rel="noopener">Visual Studio Hub</a> for the latest release notes, YouTube videos, social updates, and community discussions.</p>
<h3>Appreciation for your feedback</h3>
<p>Your feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through <a href="https://developercommunity.visualstudio.com" target="_blank" rel="noopener">Developer Community</a>, you help us improve and shape the future of Visual Studio.</p>
</article>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/how-to-watch-microsoft-build-2025-online/">How to Watch Microsoft Build 2025 Online</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://devblogs.microsoft.com/visualstudio/how-to-watch-microsoft-build-2025-online/feed/</wfw:commentRss>
			<slash:comments>3</slash:comments>
		
		
			</item>
		<item>
		<title>Agent mode has arrived in preview for Visual Studio</title>
		<link>https://devblogs.microsoft.com/visualstudio/agent-mode-has-arrived-in-preview-for-visual-studio/</link>
		
		<dc:creator><![CDATA[Katie Savage, Aaron Yim]]></dc:creator>
		<pubDate>Tue, 13 May 2025 17:26:51 +0000</pubDate>
				<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Copilot]]></category>
		<category><![CDATA[GitHub Copilot]]></category>
		<category><![CDATA[Productivity]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Agent Mode]]></category>
		<category><![CDATA[AI Agents]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=253199</guid>

					<description><![CDATA[<p>Plan, build, test, and fix — all from one prompt. Agent mode is now available in public preview for all users in Visual Studio 17.14. Agent mode in Visual Studio allows you to define tasks using natural language, with Copilot autonomously planning, editing your codebase, invoking tools, and iterating to resolve issues. Unlike Copilot Chat [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/agent-mode-has-arrived-in-preview-for-visual-studio/">Agent mode has arrived in preview for Visual Studio</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p><strong>Plan, build, test, and fix — all from one prompt.</strong></p>
<p><div class="d-flex justify-content-left"><a class="cta_button_link btn-primary mb-24" href="https://visualstudio.microsoft.com/vs/downloads/" target="_blank">Download Visual Studio 17.14</a></div></p>
<p><strong>Agent mode</strong> is now available in <strong>public preview</strong> for all users in Visual Studio 17.14. Agent mode in Visual Studio allows you to define tasks using natural language, with Copilot autonomously planning, editing your codebase, invoking tools, and iterating to resolve issues. Unlike Copilot Chat or Edits, agent mode doesn’t stop at one suggestion or file edit but works iteratively until the task is complete.</p>
<p><iframe title="Introducing agent mode in Visual Studio" width="500" height="281" src="https://www.youtube.com/embed/7_duh0HoT9o?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></p>
<h2>What can agent mode do?</h2>
<p>Agent mode doesn’t just help you write code — it helps you finish the job. All of this is done iteratively, meaning that Copilot will continue to examine and perform your task on its own output and the result of that output until it completes your prompt. This means agent mode can:</p>
<ul>
<li><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f4a1.png" alt="💡" class="wp-smiley" style="height: 1em; max-height: 1em;" /><strong>Autonomously determine the relevant context</strong> and files to edit.</li>
<li><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f4bb.png" alt="💻" class="wp-smiley" style="height: 1em; max-height: 1em;" /> <strong>Suggest terminal commands</strong> for you to approve and run.</li>
<li><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f501.png" alt="🔁" class="wp-smiley" style="height: 1em; max-height: 1em;" /> <strong>Iterate</strong> until the task is complete — checking for errors, and running builds/tests to validate results.</li>
<li><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f4e1.png" alt="📡" class="wp-smiley" style="height: 1em; max-height: 1em;" /> <strong>Invoke trusted tools via MCP servers</strong> — including linters, test runners, and static analyzers in your dev environment.</li>
</ul>
<p>We’re also simplifying the Copilot experience by making agent mode the new default way to apply code changes. You can think of agent mode as the next evolution of Edits which developers have come to love in GitHub Copilot chat with even more power!</p>
<p><img decoding="async" class="alignnone wp-image-253200" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/word-image-253199-1.png" alt="Agent mode turned on in VS" width="500" height="291" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/word-image-253199-1.png 500w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/word-image-253199-1-300x175.png 300w" sizes="(max-width: 500px) 100vw, 500px" /></p>
<h2>How to enable it</h2>
<p>Agent mode is off by default in this preview phase. To turn it on:</p>
<ol>
<li>Use Visual Studio 17.14 GA or later</li>
<li>Go to Feature Search (Ctrl + Q)</li>
<li>Search: agent</li>
<li>Enable: Copilot Chat: Agent Enabled</li>
<li>In the Copilot Chat window switch to “Agent” and try a high-level prompt. You can access the Copilot Chat window from the Copilot badge in the upper right of the IDE.</li>
</ol>
<h2>Using agent mode</h2>
<p>Agent mode is a powerful tool that can be applied in many scenarios. It can create apps from scratch, refactor code across multiple files, write and run tests, generate documentation, integrate new libraries, implement terminal-heavy tasks, and answer questions about complex codebases. It enhances productivity by orchestrating your development flow while keeping you in control. When determining if agent mode is the right tool for the job, consider the following.</p>
<ul>
<li><strong>Edit scope</strong>: Agent mode takes the reins, autonomously searching your codebase and determining the relevant context and files to edit.</li>
<li><strong>Task complexity</strong>: For intricate tasks that go beyond simple code edits, agent mode shines. It handles tool invocations and terminal commands, making it ideal for complex projects.</li>
<li><strong>Duration</strong>: Agent mode is thorough, involving multiple steps to process a request. It might take longer to get a response as it determines the context, plans the action, and more.</li>
<li><strong>Self-iteration</strong>: One of the standout features of agent mode is its ability to evaluate the outcome of generated edits and iterate multiple times to resolve intermediate issues.</li>
<li><strong>Multiple requests</strong>: Depending on the complexity of the task, agent mode might result in multiple requests to the backend from a single prompt.</li>
</ul>
<p><span data-contrast="auto">Once you&#8217;ve determined that agent mode is the right tool for the job, you just need to give it a good prompt. Here are some example prompts to give you an idea of what you can ask the agent to do:</span><span data-ccp-props="{}"> </span></p>
<ul>
<li><span data-contrast="auto">&#8220;Add error handling to this API&#8221;</span><span data-ccp-props="{}"> </span></li>
<li><span data-contrast="auto">&#8220;Convert this project to use environment variables&#8221;</span><span data-ccp-props="{}"> </span></li>
<li><span data-contrast="auto">&#8220;Write tests for this class and fix anything that fails&#8221;</span><span data-ccp-props="{}"> </span></li>
<li><span data-contrast="auto"> &#8220;Add structured logging with Serilog&#8221;</span><span data-ccp-props="{}"> </span></li>
<li><span data-contrast="auto">&#8220;Replace </span><span data-contrast="auto">HttpClient</span><span data-contrast="auto"> with </span><span data-contrast="auto">IHttpClientFactory&#8221;</span></li>
</ul>
<p>A key to better, more accurate responses from Copilot is providing it with sufficient context about your preferred coding standards, team preferences, libraries, and more. You can provide this context with <strong>custom instructions</strong>. The custom instructions feature enables you to automatically add pre-specified contextual details to your chat questions. To configure custom instructions, follow the <a href="https://learn.microsoft.com/visualstudio/ide/copilot-chat-context?view=vs-2022#enable-custom-instructions">documentation instructions</a>.</p>
<h2>Boost agent mode with MCP servers</h2>
<p>This release further extends the power of agent mode by supporting <a href="https://modelcontextprotocol.io/introduction">Model Context Protocol (MCP</a>) servers. MCP servers provide additional context to the Copilot agent and give it access to tools, data, and resources. The MCP website describes MCP as a universal adaptor for AI applications. In the same way that a universal adaptor lets you connect your physical devices to accessories, MCP lets you connect AI applications to other data and tools without needing to build a custom connection to each data source. For example, you can connect directly to your database and analyze schemes, pull in information for GitHub repos such as issues and pull requests, automate end-to-end testing with Playwright, or you can even build your own with several SDKs including C#! <span data-contrast="auto">Here are a few other examples of what you can do with MCP servers:</span><span data-ccp-props="{}"> </span></p>
<p><b><span data-contrast="auto">Interact with your cloud environment</span></b><span data-contrast="auto">: For example, the official Azure MCP server gives access to list, query, and interact with services and tools like Azure Storage, Cosmos DB, the Azure CLI, and more.</span><span data-ccp-props="{}"> </span></p>
<p><b><span data-contrast="auto">Query and manage database: </span></b><span data-contrast="auto">Execute queries against Cosmos DB containers, get Azure Storage container properties and metadata, and manage blob containers and blobs.</span><span data-ccp-props="{}"> </span></p>
<p><b><span data-contrast="auto">Search and manage version control platform</span></b><span data-contrast="auto">: For example, the GitHub API allows batch creation of issues or batch updates of files, can search for code and issues across GitHub repositories, and more.</span><span data-ccp-props="{&quot;134233117&quot;:false,&quot;134233118&quot;:false,&quot;201341983&quot;:0,&quot;335551550&quot;:1,&quot;335551620&quot;:1,&quot;335559685&quot;:0,&quot;335559737&quot;:0,&quot;335559738&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<p><img decoding="async" class="alignnone wp-image-253201" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/word-image-253199-2.jpeg" alt="Filter tools options for agent mode" width="987" height="621" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/word-image-253199-2.jpeg 987w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/word-image-253199-2-300x189.jpeg 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/word-image-253199-2-768x483.jpeg 768w" sizes="(max-width: 987px) 100vw, 987px" /></p>
<h2>More updates with new monthly release schedule for Copilot</h2>
<p>We’re constantly evolving to get Copilot features out so that you, the developer, are never behind. As such, we’re excited to announce that Visual Studio is moving to a monthly release schedule for Copilot updates. You can access the latest Copilot updates by continuing to update Visual Studio to the latest version.</p>
<h3>Check out the new Visual Studio Hub</h3>
<p>Stay connected with everything Visual Studio in one place! Visit the <a href="https://visualstudio.microsoft.com/hub/">Visual Studio Hub</a> for the latest release notes, YouTube videos, social updates, and community discussions.</p>
<h3>Appreciation for your feedback</h3>
<p>Your feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through <a href="https://developercommunity.visualstudio.com/VisualStudio">Developer Community</a>, you help us improve and shape the future of Visual Studio.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/agent-mode-has-arrived-in-preview-for-visual-studio/">Agent mode has arrived in preview for Visual Studio</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
